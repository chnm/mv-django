# Generated by Django 5.2.4 on 2025-07-08 20:27

import django.db.models.deletion
import historical_dates.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("historical_dates", "0002_alter_historicaldate_edtf_date"),
        ("locations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=255)),
                ("last_name", models.CharField(blank=True, max_length=255)),
                ("occupation", models.CharField(blank=True, max_length=255)),
                (
                    "identifying_information",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female"), ("U", "Unknown")],
                        max_length=1,
                    ),
                ),
                (
                    "citizenship",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PersonRelationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of this relationship.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "converse_name",
                    models.CharField(
                        blank=True,
                        help_text="The converse of the relationship, e.g., 'Child' when Person is 'Parent'.\n        Leave blank if the converse is identical (for example, 'Spouse' or 'Business Partner').",
                        max_length=255,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("I", "Immediate family relations"),
                            ("E", "Extended family"),
                            ("M", "Relatives by marriage"),
                            ("B", "Business and property relationships"),
                            ("A", "Ambiguity"),
                        ],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "Person-Person relationship",
                "verbose_name_plural": "Person-Person relationships",
            },
        ),
        migrations.CreateModel(
            name="Weapon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="PersonRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "from_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="to_person",
                        to="mapping_violence.person",
                    ),
                ),
                (
                    "to_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="from_person",
                        to="mapping_violence.person",
                        verbose_name="Person",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mapping_violence.personrelationtype",
                        verbose_name="Relation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="person",
            name="relationships",
            field=models.ManyToManyField(
                related_name="related_to",
                through="mapping_violence.PersonRelation",
                to="mapping_violence.person",
                verbose_name="Related People",
            ),
        ),
        migrations.CreateModel(
            name="Crime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("crime", models.CharField(blank=True, max_length=255)),
                ("motive", models.CharField(blank=True, max_length=255)),
                ("date", models.DateField()),
                ("feast_day", models.CharField(blank=True, max_length=255)),
                ("time_of_day", models.CharField(blank=True, max_length=255)),
                (
                    "violence_caused_death",
                    models.BooleanField(
                        verbose_name="Did the crime cause the victim to die?"
                    ),
                ),
                (
                    "pardoned",
                    models.BooleanField(verbose_name="Was the perpetrator pardoned?"),
                ),
                (
                    "convicted",
                    models.BooleanField(verbose_name="Was the perpetrator convicted?"),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                (
                    "address",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="locations.location",
                    ),
                ),
                (
                    "historical_date",
                    historical_dates.fields.HistoricalDateField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="historical_dates.historicaldate",
                    ),
                ),
                (
                    "judge",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mapping_violence.person",
                    ),
                ),
                (
                    "perpetrator",
                    models.ManyToManyField(
                        related_name="crime_perpetrator", to="mapping_violence.person"
                    ),
                ),
                (
                    "victim",
                    models.ManyToManyField(
                        related_name="crime_victim", to="mapping_violence.person"
                    ),
                ),
                (
                    "weapon",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mapping_violence.weapon",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="personrelation",
            constraint=models.UniqueConstraint(
                fields=("type", "from_person", "to_person"),
                name="unique_person_relation_by_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="personrelation",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("from_person", models.F("to_person")), _negated=True
                ),
                name="mapping_violence_personrelation_prevent_self_relationship",
            ),
        ),
    ]
